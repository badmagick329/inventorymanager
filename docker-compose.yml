services:
  db:
    image: postgres:15
    volumes:
      - ./db:/var/lib/postgresql/data/
    restart: "on-failure"
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: "always"
    command: sh -c "python3 manage.py migrate &&
      python3 manage.py collectstatic --no-input &&
      gunicorn backend.wsgi:application --bind 0.0.0.0:${DJANGO_PORT}"
    volumes:
      - ./backend:/usr/src/app
      - staticfiles:/usr/src/app/staticfiles
    expose:
      - "${DJANGO_PORT}"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
  nextapp:
    image: nextjs
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: deploy
    restart: "on-failure"
    depends_on:
      - backend

  nginx:
    build:
      context: ./nginx
    restart: "always"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - staticfiles:/usr/src/app/staticfiles
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    depends_on:
      - backend

volumes:
  staticfiles:
